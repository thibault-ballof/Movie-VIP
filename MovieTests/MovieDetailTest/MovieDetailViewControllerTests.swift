//
//  MovieDetailViewControllerTests.swift
//  Movie
//
//  Created by Thibault Ballof on 18/04/2024.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Movie
import XCTest

class MovieDetailViewControllerTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: MovieDetailViewController!
  var window: UIWindow!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    window = UIWindow()
    setupMovieDetailViewController()
  }
  
  override func tearDown()
  {
    window = nil
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupMovieDetailViewController()
  {
    sut = MovieDetailViewController()
  }
  
  func loadView()
  {
    window.addSubview(sut.view)
    RunLoop.current.run(until: Date())
  }
  
  // MARK: Test doubles
  
  class MovieDetailBusinessLogicSpy: MovieDetailBusinessLogic
  {
    var doSomethingCalled = false
    
      func fetchMovie(request: MovieDetail.FetchMovie.Request)
    {
      doSomethingCalled = true
    }
  }
  
  // MARK: Tests
  
  func testShouldDoSomethingWhenViewIsLoaded()
  {
    // Given
    let spy = MovieDetailBusinessLogicSpy()
    sut.interactor = spy
    
    // When
    loadView()
    
    // Then
    XCTAssertTrue(spy.doSomethingCalled, "viewDidLoad() should ask the interactor to do something")
  }
  
  func testDisplaySomething()
  {
    // Given
      let viewModel = MovieDetail.FetchMovie.ViewModel(movie: Movie(backdropPath: "", title: "", posterPath: "", releaseDate: "", overview: "Dune 2"))
    
    // When
    loadView()
    sut.displayMovieDetail(viewModel: viewModel)
    
    // Then
      XCTAssertEqual(sut.descriptionLabel.text, "Dune 2", "displaySomething(viewModel:) should update the name text field")
  }
}
