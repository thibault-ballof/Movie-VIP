//
//  MovieListInteractor.swift
//  Movie
//
//  Created by Thibault Ballof on 17/04/2024.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieListBusinessLogic {
    func fetchMoviesList(request: MovieList.FetchMoviesList.Request) async
}

protocol MovieListDataStore {
    var movieList: MoviesResults? { get set }
}

class MovieListInteractor: MovieListBusinessLogic, MovieListDataStore {
    var presenter: MovieListPresentationLogic?
    var worker: MovieListWorker?
    var movieList: MoviesResults?
    var service: Networking?
    
    // MARK: Do something
    
    func fetchMoviesList(request: MovieList.FetchMoviesList.Request) async {
        if service == nil {
            service = Service()
        }
        guard let service else { return }
        
        worker = MovieListWorker(service: service)
        do {
            movieList = try await worker?.getMoviesList()
        } catch {
            print(error)
        }
        
        guard let movieList = movieList else { return }
        let response = MovieList.FetchMoviesList.Response(movieList: movieList)
        presenter?.presentMovieList(response: response)
    }
}
